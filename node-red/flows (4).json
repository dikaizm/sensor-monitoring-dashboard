[
    {
        "id": "e15c0b1a.5c5d",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c1d9e769.7521b8",
        "type": "serial in",
        "z": "e15c0b1a.5c5d",
        "name": "Arduino",
        "serial": "0940e23addab2be3",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "a6a4e7ff.16d4c8"
            ]
        ]
    },
    {
        "id": "a6a4e7ff.16d4c8",
        "type": "function",
        "z": "e15c0b1a.5c5d",
        "name": "Calculate Items",
        "func": "let distance = parseFloat(msg.payload);\nlet threshold = 10; // Set the distance threshold for detecting an item\n\nif (distance < threshold) {\n    if (context.get('itemDetected') !== true) {\n        context.set('itemDetected', true);\n        context.set('itemCount', (context.get('itemCount') || 0) + 1);\n    }\n} else {\n    context.set('itemDetected', false);\n}\n\nmsg.payload = context.get('itemCount');\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [
            [
                "58bf2d8f.0d0a44",
                "aac7e348ba81ceac",
                "9c6daced3f1abb6f"
            ]
        ]
    },
    {
        "id": "58bf2d8f.0d0a44",
        "type": "debug",
        "z": "e15c0b1a.5c5d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 550,
        "y": 100,
        "wires": []
    },
    {
        "id": "ff1ef4abed45bf4e",
        "type": "inject",
        "z": "e15c0b1a.5c5d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "3eddd20f87433c7d",
                "0c337376ef6cbe70"
            ]
        ]
    },
    {
        "id": "3eddd20f87433c7d",
        "type": "debug",
        "z": "e15c0b1a.5c5d",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 320,
        "wires": []
    },
    {
        "id": "0c337376ef6cbe70",
        "type": "function",
        "z": "e15c0b1a.5c5d",
        "name": "function 2",
        "func": "// Ambil input payload\nlet inputPayload = msg.payload;\n\n// Misalnya, jika input payload berisi hz, bisa juga jadi seperti ini\nlet hz = inputPayload.hz || inputPayload; // ini tergantung pada bagaimana Anda mengirimkan input\n\n// Konversi Hz ke RPM\nlet rpm = (hz * 120) / 4;\n\n// Mengatur konfigurasi data\nlet config = {\n    rpm: rpm,\n    parameter2: 'default_value2',\n    parameter3: 'default_value3'\n};\n\n// Set output payload\nmsg.payload = config;\n\n// Set output topic\nmsg.topic = \"motor/rpm\";\n\n// Return pesan yang telah dimodifikasi\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 380,
        "wires": [
            [
                "8463b82440cc0835",
                "3de8fe2b4fbb1fb0",
                "06bb3b5708962f6a"
            ]
        ]
    },
    {
        "id": "8463b82440cc0835",
        "type": "debug",
        "z": "e15c0b1a.5c5d",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 380,
        "wires": []
    },
    {
        "id": "3de8fe2b4fbb1fb0",
        "type": "mqtt out",
        "z": "e15c0b1a.5c5d",
        "name": "",
        "topic": "motor/rpm",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "application/json",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "14748423176be952",
        "x": 530,
        "y": 460,
        "wires": []
    },
    {
        "id": "aac7e348ba81ceac",
        "type": "mqtt out",
        "z": "e15c0b1a.5c5d",
        "name": "",
        "topic": "sensor",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "14748423176be952",
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "ff81cef1e87b59bf",
        "type": "serial in",
        "z": "e15c0b1a.5c5d",
        "name": "",
        "serial": "6f67a338702c89e7",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "23b3594ec3f74a77"
            ]
        ]
    },
    {
        "id": "92286afb72680f52",
        "type": "debug",
        "z": "e15c0b1a.5c5d",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 640,
        "wires": []
    },
    {
        "id": "23b3594ec3f74a77",
        "type": "function",
        "z": "e15c0b1a.5c5d",
        "name": "function 3",
        "func": "// Mengubah payload menjadi sinyal \"1\"\nmsg.payload = 1;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 560,
        "wires": [
            [
                "92286afb72680f52"
            ]
        ]
    },
    {
        "id": "06bb3b5708962f6a",
        "type": "mqtt out",
        "z": "e15c0b1a.5c5d",
        "name": "",
        "topic": "sensor_monitor",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "application/json",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "86f7f68b7414d8c1",
        "x": 580,
        "y": 540,
        "wires": []
    },
    {
        "id": "9c6daced3f1abb6f",
        "type": "mqtt out",
        "z": "e15c0b1a.5c5d",
        "name": "",
        "topic": "sensor_monitor",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "application/json",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "86f7f68b7414d8c1",
        "x": 580,
        "y": 260,
        "wires": []
    },
    {
        "id": "0940e23addab2be3",
        "type": "serial-port",
        "name": "",
        "serialport": "COM6",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "14748423176be952",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.emqx.io",
        "port": "1883",
        "tls": "9895ea30a732d923",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6f67a338702c89e7",
        "type": "serial-port",
        "name": "",
        "serialport": "COM5",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "86f7f68b7414d8c1",
        "type": "mqtt-broker",
        "name": "",
        "broker": "n7b63900.ala.asia-southeast1.emqxsl.com",
        "port": "8883",
        "tls": "34b1de16880098e1",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9895ea30a732d923",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "broker.emqx.io-ca.crt",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "34b1de16880098e1",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "emqxsl-ca.crt",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    }
]